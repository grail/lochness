<%! func nftWrite(w io.Writer, ip string, sources []group, rules []string) error %>
flush ruleset

table inet filter {
  <% for _, group := range sources { %>
  # FWGroupID=<%= group.ID %>
  set g<%= group.Name %> {
    type ipv4_addr<% if len(group.IPs) > 0 { %>
    elements = { <% for i := range group.IPs { %>
      <%= group.IPs[i] %>, <% } %>
    }<% } %>
  }
  <% } %>
  chain input {
    type filter hook input priority 0;

    # allow established/related connections
    ct state {established, related} accept

    # early drop of invalid connections
    ct state invalid drop

    # allow from loopback
    iifname lo accept

    # allow icmp
    ip protocol icmp accept
    ip6 nexthdr icmpv6 accept

    # allow lochness hv traffic
    # ssh, http, beanstalk, etcd
    ip daddr <%= ip %> accept

    <% if len(rules) > 0 { %>
    # Allow traffic to guests as specified by FWGroups
    <% for i := range rules { %>
    <%= rules[i] %> accept<% } %>
    <% } %>
    # everything else
    reject with icmp type port-unreachable
  }

  chain forward {
    type filter hook forward priority 0;
    drop
  }

  chain output {
    type filter hook output priority 0;
  }
}
